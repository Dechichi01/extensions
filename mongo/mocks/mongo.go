// Automatically generated by MockGen. DO NOT EDIT!
// Source: mongo/interfaces/mongo.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	interfaces "github.com/topfreegames/extensions/mongo/interfaces"
)

// Mock of MongoDB interface
type MockMongoDB struct {
	ctrl     *gomock.Controller
	recorder *_MockMongoDBRecorder
}

// Recorder for MockMongoDB (not exported)
type _MockMongoDBRecorder struct {
	mock *MockMongoDB
}

func NewMockMongoDB(ctrl *gomock.Controller) *MockMongoDB {
	mock := &MockMongoDB{ctrl: ctrl}
	mock.recorder = &_MockMongoDBRecorder{mock}
	return mock
}

func (_m *MockMongoDB) EXPECT() *_MockMongoDBRecorder {
	return _m.recorder
}

func (_m *MockMongoDB) Run(cmd interface{}, result interface{}) error {
	ret := _m.ctrl.Call(_m, "Run", cmd, result)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockMongoDBRecorder) Run(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Run", arg0, arg1)
}

func (_m *MockMongoDB) C(name string) interfaces.Collection {
	ret := _m.ctrl.Call(_m, "C", name)
	ret0, _ := ret[0].(interfaces.Collection)
	return ret0
}

func (_mr *_MockMongoDBRecorder) C(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "C", arg0)
}

func (_m *MockMongoDB) Close() {
	_m.ctrl.Call(_m, "Close")
}

func (_mr *_MockMongoDBRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

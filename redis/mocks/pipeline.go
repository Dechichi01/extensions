// Automatically generated by MockGen. DO NOT EDIT!
// Source: interfaces/pipeline.go

package mocks

import (
	redis "github.com/go-redis/redis"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Pipeline interface
type MockPipeline struct {
	ctrl     *gomock.Controller
	recorder *_MockPipelineRecorder
}

// Recorder for MockPipeline (not exported)
type _MockPipelineRecorder struct {
	mock *MockPipeline
}

func NewMockPipeline(ctrl *gomock.Controller) *MockPipeline {
	mock := &MockPipeline{ctrl: ctrl}
	mock.recorder = &_MockPipelineRecorder{mock}
	return mock
}

func (_m *MockPipeline) EXPECT() *_MockPipelineRecorder {
	return _m.recorder
}

func (_m *MockPipeline) HMSet(_param0 string, _param1 map[string]interface{}) *redis.StatusCmd {
	ret := _m.ctrl.Call(_m, "HMSet", _param0, _param1)
	ret0, _ := ret[0].(*redis.StatusCmd)
	return ret0
}

func (_mr *_MockPipelineRecorder) HMSet(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HMSet", arg0, arg1)
}

func (_m *MockPipeline) SAdd(key string, members ...interface{}) *redis.IntCmd {
	_s := []interface{}{key}
	for _, _x := range members {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "SAdd", _s...)
	ret0, _ := ret[0].(*redis.IntCmd)
	return ret0
}

func (_mr *_MockPipelineRecorder) SAdd(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SAdd", _s...)
}

func (_m *MockPipeline) SRem(key string, members ...interface{}) *redis.IntCmd {
	_s := []interface{}{key}
	for _, _x := range members {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "SRem", _s...)
	ret0, _ := ret[0].(*redis.IntCmd)
	return ret0
}

func (_mr *_MockPipelineRecorder) SRem(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SRem", _s...)
}

func (_m *MockPipeline) Exec() ([]redis.Cmder, error) {
	ret := _m.ctrl.Call(_m, "Exec")
	ret0, _ := ret[0].([]redis.Cmder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPipelineRecorder) Exec() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Exec")
}

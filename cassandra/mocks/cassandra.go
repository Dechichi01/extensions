// Automatically generated by MockGen. DO NOT EDIT!
// Source: interfaces/cassandra.go

package mocks

import (
	gocql "github.com/gocql/gocql"
	gomock "github.com/golang/mock/gomock"
)

// Mock of DB interface
type MockDB struct {
	ctrl     *gomock.Controller
	recorder *_MockDBRecorder
}

// Recorder for MockDB (not exported)
type _MockDBRecorder struct {
	mock *MockDB
}

func NewMockDB(ctrl *gomock.Controller) *MockDB {
	mock := &MockDB{ctrl: ctrl}
	mock.recorder = &_MockDBRecorder{mock}
	return mock
}

func (_m *MockDB) EXPECT() *_MockDBRecorder {
	return _m.recorder
}

func (_m *MockDB) CreateSession() (*gocql.Session, error) {
	ret := _m.ctrl.Call(_m, "CreateSession")
	ret0, _ := ret[0].(*gocql.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDBRecorder) CreateSession() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateSession")
}

// Mock of Session interface
type MockSession struct {
	ctrl     *gomock.Controller
	recorder *_MockSessionRecorder
}

// Recorder for MockSession (not exported)
type _MockSessionRecorder struct {
	mock *MockSession
}

func NewMockSession(ctrl *gomock.Controller) *MockSession {
	mock := &MockSession{ctrl: ctrl}
	mock.recorder = &_MockSessionRecorder{mock}
	return mock
}

func (_m *MockSession) EXPECT() *_MockSessionRecorder {
	return _m.recorder
}

func (_m *MockSession) Close() bool {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockSessionRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockSession) Query(_param0 string, _param1 ...interface{}) *gocql.Query {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Query", _s...)
	ret0, _ := ret[0].(*gocql.Query)
	return ret0
}

func (_mr *_MockSessionRecorder) Query(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Query", _s...)
}

func (_m *MockSession) ExecuteBatch(_param0 *gocql.Batch) error {
	ret := _m.ctrl.Call(_m, "ExecuteBatch", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSessionRecorder) ExecuteBatch(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ExecuteBatch", arg0)
}

func (_m *MockSession) NewBatch(_param0 gocql.BatchType) *gocql.Batch {
	ret := _m.ctrl.Call(_m, "NewBatch", _param0)
	ret0, _ := ret[0].(*gocql.Batch)
	return ret0
}

func (_mr *_MockSessionRecorder) NewBatch(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewBatch", arg0)
}
